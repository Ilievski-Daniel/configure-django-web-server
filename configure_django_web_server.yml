---

- hosts: all
  become: true
  tasks:

    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install python3-venv package
      apt:
        name: python3-venv
        state: present

    - name: Create a virtual environment
      command: python3 -m venv env
      args:
        chdir: /home/ubuntu
    
    - name: Activate the virtual environment as root
      shell: |
        source /home/ubuntu/env/bin/activate
      args:
        chdir: /home/ubuntu
        executable: /bin/bash
      become_user: root

    - name: Install python3-pip package
      apt:
        name: python3-pip
        state: present

    - name: Clone django-demo repository
      git:
        repo: https://github.com/genialis/django-demo
        dest: /home/ubuntu/django-demo
        force: yes

    - name: Install requirements from django-demo
      pip:
        requirements: /home/ubuntu/django-demo/requirements.txt
        virtualenv: /home/ubuntu/env
    
    - name: Install Gunicorn
      pip:
        name: gunicorn
        virtualenv: /home/ubuntu/env

    - name: Set server public IP variable
      set_fact:
        server_public_ip: "{{ server_public_ip }}"

    - name: Overwrite settings.py file
      copy:
        dest: /home/ubuntu/django-demo/demo/settings.py
        content: |
          from pathlib import Path

          BASE_DIR = Path(__file__).resolve().parent.parent

          # SECURITY WARNING: keep the secret key used in production secret!
          SECRET_KEY = "django-insecure-qmonb*n%q-_!4#7dbcq_06$2e=lsqi5c^v5v62^#o4=036z8z0"

          # SECURITY WARNING: don't run with debug turned on in production!
          DEBUG = True

          ALLOWED_HOSTS = ['{{ server_public_ip }}']

          INSTALLED_APPS = [
              "polls.apps.PollsConfig",
              "django.contrib.admin",
              "django.contrib.auth",
              "django.contrib.contenttypes",
              "django.contrib.sessions",
              "django.contrib.messages",
              "django.contrib.staticfiles",
          ]

          MIDDLEWARE = [
              "django.middleware.security.SecurityMiddleware",
              "django.contrib.sessions.middleware.SessionMiddleware",
              "django.middleware.common.CommonMiddleware",
              "django.middleware.csrf.CsrfViewMiddleware",
              "django.contrib.auth.middleware.AuthenticationMiddleware",
              "django.contrib.messages.middleware.MessageMiddleware",
              "django.middleware.clickjacking.XFrameOptionsMiddleware",
          ]

          ROOT_URLCONF = "demo.urls"

          TEMPLATES = [
              {
                  "BACKEND": "django.template.backends.django.DjangoTemplates",
                  "DIRS": [],
                  "APP_DIRS": True,
                  "OPTIONS": {
                      "context_processors": [
                          "django.template.context_processors.debug",
                          "django.template.context_processors.request",
                          "django.contrib.auth.context_processors.auth",
                          "django.contrib.messages.context_processors.messages",
                      ],
                  },
              },
          ]

          WSGI_APPLICATION = "demo.wsgi.application"

          DATABASES = {
              "default": {
                  "ENGINE": "django.db.backends.sqlite3",
                  "NAME": BASE_DIR / "db.sqlite3",
              }
          }

          AUTH_PASSWORD_VALIDATORS = [
              {
                  "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
              },
              {
                  "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
              },
              {
                  "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
              },
              {
                  "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
              },
          ]

          LANGUAGE_CODE = "en-us"
          TIME_ZONE = "UTC"
          USE_I18N = True
          USE_TZ = True

          STATIC_URL = '/static/'
          STATIC_ROOT = '/home/ubuntu/django-demo/static/'

          MEDIA_URL = '/media/'
          MEDIA_ROOT = '/home/ubuntu/django-demo/media/'

          DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

    - name: Install Supervisor
      apt:
        name: supervisor
        state: present
    
    - name: Create gunicorn.conf file
      template:
        src: gunicorn.conf.j2
        dest: /etc/supervisor/conf.d/gunicorn.conf
      vars:
        directory_path: "/home/ubuntu"
        log_directory: "/var/log/gunicorn"
        project_name: "django-demo"
        app_name: "demo"
          
    - name: Create /var/log/gunicorn directory
      file:
        path: /var/log/gunicorn
        state: directory
        mode: '0755'
        owner: root
        group: root

    - name: Run supervisorctl reread
      shell: |
        source /home/ubuntu/env/bin/activate
        supervisorctl reread 
    
    - name: Run supervisorctl update
      shell: |
        source /home/ubuntu/env/bin/activate
        supervisorctl update 

    - name: Restart supervisor
      shell: |
        source /home/ubuntu/env/bin/activate
        /usr/bin/systemctl restart supervisor

    - name: Overwrite default Nginx configuration
      copy:
        dest: /etc/nginx/sites-available/default
        content: |
          server {
            listen 80;
            
            server_name {{ server_public_ip }};

            location / {
              include proxy_params;
              proxy_pass http://unix:/home/ubuntu/django-demo/app.sock;
            }

            location /static/ {
              alias /home/ubuntu/django-demo/static/;
            }

            location /media/ {
              alias /home/ubuntu/django-demo/media/;
            }
          }

    - name: Reload Nginx service
      service:
        name: nginx
        state: reloaded

    - name: Run migrate command
      shell: |
        source /home/ubuntu/env/bin/activate
        python3 manage.py migrate
      args:
        chdir: /home/ubuntu/django-demo
        executable: /bin/bash

    - name: Run collectstatic command
      shell: |
        source /home/ubuntu/env/bin/activate
        python3 manage.py collectstatic --noinput
      args:
        chdir: /home/ubuntu/django-demo
        executable: /bin/bash
    
    - name: Restart Nginx service
      service:
        name: nginx
        state: restarted